<?php class Lista{	private $_modulo = 1;	private $_objLista = NULL;	private $_objList  = NULL;	private $_campos = array();	private $_lista = array();	private $_link = array();	private $_nroPagina;	private $_regPorPagina = LINHASPORPAGINA;	private $_regInicial;	private $_regFinal;	private $_pagInicial;	private $_pagFinal;	private $_id;	private $_app;	private $_filtro;	private $_filter;	private $_ordem = "";	private $_flg_consulta;	private $filtroCancelamento = false;	private $_arrNumVoip;	private $_group = '';	private $nome_modulo='';	private $_nomtabela;	private $boolExport = false;	function __construct($modulo = 1,$flg_consulta=false,$limit = true){		$this->_modulo = $modulo;		$this->_flg_consulta = $flg_consulta;		if($limit === false) $this->boolExport = true;	}	function ativaFiltroCancelamento(){		$this->filtroCancelamento = true;	}	function setNomeModulo($nome){ $this->nome_modulo = $nome;}	function getNomeModulo() {return $this->nome_modulo; }	function setnomTabelaExtra($var){		$this->_nomtabela = $var;	}		private function _processaLista(){		$dados = $this->_objLista->getDados();		$this->setRegistrosPorPagina($this->_regPorPagina);		$this->_nroPagina = $this->_objLista->getNroPagina();		$this->_numRegistros = $this->_objLista->getNumRegistros();		$this->_regInicial = $this->_regPorPagina * ($this->_nroPagina - 1);		if($this->_regInicial <= 0)		$this->_regInicial = 0;		$this->_regFinal = $this->_regInicial + $this->_regPorPagina;		$this->_regInicial++;		$this->_regFinal = ($this->_numRegistros < $this->_regFinal) ? $this->_numRegistros : $this->_regFinal;		$this->_pagInicial = 1;		if($this->_regPorPagina<=0)		$this->_regPorPagina = 1;		$this->_pagFinal = ceil($this->_numRegistros / $this->_regPorPagina);		if (is_array($dados) && count($dados) > 0){			foreach ($dados as $i => $cmp){				foreach($cmp as $k => $c){					if ( array_key_exists($k,$this->_campos) ){						$this->_lista[$i][$k] = $c;					}				}			}		}	} // DA FUNÇÃO _processaLista()	private function _setParametros(){		$this->_objLista->setLinhasPorPagina($this->_regPorPagina);		$this->_objLista->setNroPagina($this->_nroPagina);		$this->_objLista->setOrderBy($this->_ordem);		if($this->filtroCancelamento )		$this->_objLista->ativaFiltroCancelamento();	} // DA FUNÇÃO _setParametros()	function cancelar($id){		return $this->_objLista->cancelar($id);	}	function setCampos($campos){ $this->_campos = $campos; }	function setRegistrosPorPagina($regPorPagina){ $this->_regPorPagina = $regPorPagina; }	function setNroPagina($nroPagina){ $this->_nroPagina = $nroPagina; }	function setFiltro($filtro = array()){ $this->_filtro = $filtro; }	function setOrdem($ordem, $nom_campo){		if(!empty($ordem) && !empty($nom_campo))		$this->_ordem = ($ordem==1) ? " order by $nom_campo asc " : " order by $nom_campo desc ";	}	function setArrNumVoip($arrNumVoip = array()){ $this->_arrNumVoip = $arrNumVoip; }	function setGroup($group){ $this->_group = $group; }	function getRegistrosPorPagina(){ return $this->_regPorPagina; }	function getNroPagina(){ return $this->_nroPagina; }	function getNumRegistros(){ return $this->_numRegistros; }	function getRegInicial(){ return $this->_regInicial; }	function getRegFinal(){ return $this->_regFinal; }	function getPagInicial(){ return $this->_pagInicial; }	function getPagFinal(){ return $this->_pagFinal; }	function getId(){ return $this->_id; }	function getApp(){ return $this->_app; }	function getCampos(){ return $this->_campos; }	function getLista(){		$this->setModulo($this->_modulo);		$this->_processaLista();		return $this->_lista;	}	function getModulo(){ return $this->_objLista; }	function getCancelado(){ return $this->_objLista->getnCancelado(); }	function getGroup(){ return $this->_group; }	/**	 * Formata uma pesquisa de data dd/mm/aaaa ; dd-mm-aaaa (datas completas)	 * ou mm/aaaa ; mm-aaaa (mes/ano) ou dd/mm ; dd-mm	 *	 * @param data digitada pelo usuário	 * @return a string formata no formato = %[string]% para ser usada com LIKE em buscas em bancos de dados	 * @author G.w.A.r	 */	function formatadataToSearch($data){		//conta quantas parcelas de "/" foram recebidas		if(eregi("-", $data)) $arrParcelas = explode("-", $data);		else $arrParcelas = explode("/", $data);		$dia = '';		$mes = '';		$ano = '';		//se foram recebidas todas as parcelas (3 barras)		if(count($arrParcelas) == 3){			//navega entre os caracteres recebidos da pesquisa			for($i=0; $i<strlen($data); $i++){				//caractere atual da data				$char = $data{$i};				//obtém a posição do dia, mes e ano				if($i < 2) $dia .= $char;				elseif($i>2 && $i<5) $mes .= $char;				elseif($i>5 && $i<10) $ano .= $char;			}			$strReturn = "%".$ano."-".$mes."-".$dia."%";		}		//se foram recebidas duas parcelas		elseif(count($arrParcelas) == 2){			//verifica se existe parcela do ano			foreach($arrParcelas as $pedacos){				if(strlen($pedacos) >= 4) $tenhoAno = true;				else $tenhoAno = false;			}			//se tiver ano busca por mês e ano			if($tenhoAno == true){				for($i=0; $i<strlen($data); $i++){					//caractere atual da data					$char = $data{$i};					//obtém a posição do dia, mes e ano					if($i < 2) $mes .= $char;					elseif($i>2 && $i<7) $ano .= $char;				}				$strReturn = "%".$ano."-".$mes."%";			}			//se nao tiver ano busca por dia e mes			else{				for($i=0; $i<strlen($data); $i++){					//caractere atual da data					$char = $data{$i};					//obtém a posição do dia, mes e ano					if($i < 2) $dia .= $char;					elseif($i>2 && $i<5) $mes .= $char;				}				$strReturn = "%".$mes."-".$dia."%";			}		}		//se foi recebido apenas uma parcela		else $strReturn = "%{$data}%";		//retorna a data no padrao do banco de dados em formato para like		return $strReturn;	}		function setModulo(){		$objModulo = new Modulo ();		$obj = $objModulo->getObj ( $this->_modulo );		$this->_campos = $obj->getcamposLst();		$this->_id = $obj->getKey();		$this->_aplicativos = $obj->getaplicativo();		$this->nome_modulo = $obj->getnomModulo();	} // DA FUNCAO setModulo()}?>